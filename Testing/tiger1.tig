let
	/*var a : int := 1
	var b := 4
	type i = array of int
	type my = {any : string, i : string, aa : string}
	function try(c:int,y:string) =
	    c := 1
	var c := 100
	type any = {a : int, i : any}*/
	type arr = array of int
	var b : arr := arr [10] of 0
	type r = {a : int, b : int}
	var a : r := r{a=1, b=2}
in
    a.c;
    b[1]
    //for i := 1 to 2 do a := a*2
    //while a<10 do a:= a * 2
    //if a=0 then b
    //if "aa" then b:=b+1 else b:=b-1
    //if a & b then a := b+1;
    //if a>0 then b:=b+1 else b:=b-1;
    /*a.a
    b[b[0]]
    for i := 1 to 2
        do (
        if a <> 1 then break
         else a :=a*2)
    1+2;
    1;
    1+2;
    "100";
    a := nil;
    f(a);
    (a-1; a+2; a-4);
	a;
	a := 1;
	b := (a<>1;a>0;a-1;2+a*b-2/a;a|2);
	print(f(a,g(b)))
	try(1, "12")*/
end